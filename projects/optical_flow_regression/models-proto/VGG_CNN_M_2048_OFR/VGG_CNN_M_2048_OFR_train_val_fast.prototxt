name: "Optical_Flow_Regression_VGG_CNN_M_2048"
layer {
  name: "data"
  type: "OFRData"
  top: "data"
  top: "label"
  ofr_data_param {
    source: "/home/jiri/Lake/DAR/projects/optical_flow_regression/train-of-mpi-large.txt"
    label_source: "/home/jiri/Lake/DAR/projects/optical_flow_regression/train-of-labels-lmdb-mpi-large"
#    root_path: "/home/jiri/Lake/DAR/share/datasets/THUMOS2015/thumos15_validation-rgbflow/"
    root_path: "/home/jiri/Lake/DAR/share/datasets/MPI_Sintel/MPI_Sintel-rgb/"

    batch_size: 128
#    new_length: 10
#    num_segments: 1
#    modality: FLOW
#    shuffle: true
  }
  transform_param{
#     scale: 0.0039
    crop_size: 224
    mirror: true
    fix_crop: true
    center_crop: true
     multi_scale: false
#    max_distort: 1
#    scale_ratios: [1,.875,.75]
#    is_flow: true

#     mean_file: "/home/jiri/Lake/DAR/projects/optical_flow_regression/train-of-labels-lmdb/data_mean.binaryproto"
#    mean_value: [104, 117, 123]

#    mean_value: [101.0 109.0 111.0, 101.0, 109.0, 111.0 ] # BGR BGR ?

    # RGB	
#    mean_value: [82.795824585354055, 74.875980697732018, 62.548199072190982, 82.795824585354055, 74.875980697732018, 62.548199072190982] 

    # BGR
    # Caffe usese cv::imread() which reads BGR !!!
    mean_value: [62.548199072190982, 74.875980697732018, 82.795824585354055, 62.548199072190982, 74.875980697732018, 82.795824585354055]
  }

  label_transform_param{
     scale: 0.5
#    crop_size: 0
    mirror: true
#    fix_crop: true
#    multi_scale: true
#    max_distort: 1
#    scale_ratios: [1,.875,.75]
    is_flow: true
#    mean_value: [128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128]
    mean_value: [-1.0]
  }

  include: { phase: TRAIN }
}

layer {
  name: "data"
  type: "OFRData"
  top: "data"
  top: "label"
  ofr_data_param {
    source: "/home/jiri/Lake/DAR/projects/optical_flow_regression/val-of-mpi-large.txt"
    label_source: "/home/jiri/Lake/DAR/projects/optical_flow_regression/val-of-labels-lmdb-mpi-large"
#    root_path: "/home/jiri/Lake/DAR/share/datasets/THUMOS2015/thumos15_validation-rgbflow/"
    root_path: "/home/jiri/Lake/DAR/share/datasets/MPI_Sintel/MPI_Sintel-rgb/"

    batch_size: 32
#    new_length: 10
#    num_segments: 1
#    modality: FLOW
    #shuffle: true
  }

  transform_param{
    crop_size: 224
    mirror: false
    fix_crop: true
    center_crop: true
     multi_scale: false
#    max_distort: 1
#    scale_ratios: [1,.875,.75]
#    is_flow: true

#     mean_file: "/home/jiri/Lake/DAR/projects/optical_flow_regression/train-of-labels-lmdb/data_mean.binaryproto"
#    mean_value: [104, 117, 123]

#    mean_value: [101, 109, 111, 101, 109, 111] # BGR BGR ?

    # RGB	
#    mean_value: [82.795824585354055, 74.875980697732018, 62.548199072190982, 82.795824585354055, 74.875980697732018, 62.548199072190982] 

    # BGR
    mean_value: [62.548199072190982, 74.875980697732018, 82.795824585354055, 62.548199072190982, 74.875980697732018, 82.795824585354055]
  }

  label_transform_param{
    scale: 0.5
    mean_value: [-1.0]
  }

  include: { phase: TEST }
}

#--------------------------------------------------------------------------
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"

  # learning rate and decay multipliers for the filters
  param { lr_mult: 1 decay_mult: 1 }
  # learning rate and decay multipliers for the biases
  param { lr_mult: 2 decay_mult: 0 }

  convolution_param {
    num_output: 96
    pad: 0
    kernel_size: 7
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant" # initialize the biases to zero (0)
      value: 0.001
    }
  }
}

layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}

layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    norm_region: WITHIN_CHANNEL
    local_size: 5
    alpha: 0.0005
    beta: 0.75
  }
}

layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}

#--------------------------------------------------------------------------
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 5
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant" # initialize the biases to zero (0)
      value: 0.001
    }

  }
}

layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}

layer {
  bottom: "conv2"
  top: "norm2"
  name: "norm2"
  type: "LRN"
  lrn_param {
    norm_region: WITHIN_CHANNEL
    local_size: 5
    alpha: 0.0005
    beta: 0.75
    k: 2
  }
}

layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}

#--------------------------------------------------------------------------
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    stride: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant" # initialize the biases to zero (0)
      value: 0.001
    }

  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}

#--------------------------------------------------------------------------
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant" # initialize the biases to zero (0)
      value: 0.001
    }

  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}

#--------------------------------------------------------------------------
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    stride: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant" # initialize the biases to zero (0)
      value: 0.001
    }

  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}

layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}

#--------------------------------------------------------------------------
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant" # initialize the biases to zero (0)
      value: 0.001
    }

  }
}

layer {
  name: "relu6"
  type: "ReLU"
#  type: "TanH"
  bottom: "fc6"
  top: "fc6"
}

layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}

#--------------------------------------------------------------------------
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2048
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant" # initialize the biases to zero (0)
      value: 0.001
    }

  }
}

layer {
  name: "mse"
  type: "EuclideanLoss"
  bottom: "fc7"
  bottom: "label"
  top: "mse"
  include: { phase: TEST }
}

layer {
  name: "loss"
  type: "EuclideanLoss"
  bottom: "fc7"
  bottom: "label"
  top: "loss"
  include: { phase: TRAIN }
}

