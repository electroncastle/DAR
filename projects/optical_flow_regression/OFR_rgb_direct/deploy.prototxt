name: "OFR_FlowNet"
input: "data"
input_dim: 1
input_dim: 6
input_dim: 224
input_dim: 224


layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"

  # learning rate and decay multipliers for the filters
  param { lr_mult: 1 decay_mult: 1 }
  # learning rate and decay multipliers for the biases
  param { lr_mult: 2 decay_mult: 0 }

  convolution_param {
    num_output: 64
    kernel_size: 7
    stride: 2
    pad: 3
    group: 2

    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant" # initialize the biases to zero (0)
      value: 0.0000001
    }
  }
}

layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}

#--------------------------------------------------------------------------
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "conv1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 5
    stride: 2
    pad: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant" # initialize the biases to zero (0)
      value: 0.0000001
    }
  }
}

layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}

#--------------------------------------------------------------------------
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "conv2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_size: 5
    stride: 2
    pad: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant" # initialize the biases to zero (0)
      value: 0.0000001
    }
  }
}

layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}

#--------------------------------------------------------------------------
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_size: 3
    stride: 2
    pad: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant" # initialize the biases to zero (0)
      value: 0.000001
    }

  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}

#--------------------------------------------------------------------------
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    kernel_size: 3
    stride: 2
    pad: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant" # initialize the biases to zero (0)
      value: 0.000001
    }

  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}

#--------------------------------------------------------------------------
layer {
  name: "conv6"
  type: "Convolution"
  bottom: "conv5"
  top: "conv6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    kernel_size: 3
    stride: 2
    pad: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant" # initialize the biases to zero (0)
      value: 0.000001
    }

  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "conv6"
  top: "conv6"
}

#--------------------------------------------------------------------------
layer {
  name: "conv7"
  type: "Convolution"
  bottom: "conv6"
  top: "conv7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    kernel_size: 3
    stride: 2
    pad: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant" # initialize the biases to zero (0)
      value: 0.000001
    }

  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "conv7"
  top: "conv7"
}

#--------------------------------------------------------------------------
#-----------------------------------------------
# Pretrained: fc6
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "conv7"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    bias_filler {
      type: "constant"
      value: 0.0001
    }
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}

#-----------------------------------------------
# Pretrained: fc7
layer {
  name: "fc7-1"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7-1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 3072
    bias_filler {
      type: "constant"
      value: 0.0001
    }
    weight_filler {
      type: "xavier"
    }
  }
}

#----------------------------------------------------------------
  layer {
    name: "reshape"
    type: "Reshape"
    bottom: "fc7-1"
    top: "reshape"
    reshape_param {
      shape {
        dim: 0  # copy the dimension from below
        dim: 3
        dim: 32
        dim: 32 #-1 # infer it from the other dimensions
      }
    }
  }

layer {
  name: "upscore-1"
  type: "Deconvolution"
  bottom: "reshape"
  top: "upscore-1"
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 3
    bias_term: false

#    kernel_size: {{2 * factor - factor % 2}} 
#    stride: {{factor}}
    kernel_size: 13
    stride: 7
#    group: {{C}}
#    pad: {{ceil((factor - 1) / 2.)}}
    pad: 3
#    weight_filler: { 
#	type: "bilinear" 
#    } 
  }
}

#layer { 
#  type: 'Crop' 
#  name: 'score' 
#  top: 'score'
#  bottom: 'upscore' 
 # bottom: 'data' 
#}


