name: "flow_lstm_net"


input: "data"
# First dimenstion is batch size
# TxN matrix T=timesteps sequence  N=independent streams
# It's flatten in row major order
# Note the batch dimenstion can be changed programmatically 
# during classification BUT the sequence size must still be 
# preserved

# 72 => T=18  N=4
input_shape { dim: 72 dim: 1 dim: 1  dim: 8192 }

input: "cont_label"
input_shape { dim: 72 dim: 1 }

input: "target_label"
input_shape { dim: 72 dim: 1 }



#--------------------------------------------------------------
# -- LSTM classification
#--------------------------------------------------------------

layer{
  name: "fc7-reshape"
  type: "Reshape"
  bottom: "data"
  top: "fc7-reshape"
  reshape_param{
    shape{
      dim: 18	 # Number of timestamps = batch length
      dim: -1    # Number of streams in the batch
      dim: 8192  # LSTM time unit data 
    }
  }
  include: { phase: TEST}
  include: { phase: TRAIN}
}

layer{
  name: "cont_label-reshape"
  type: "Reshape"
  bottom: "cont_label"
  top: "cont_label-reshape"
  reshape_param{
    shape{
      dim: 18	# Labels for each time stamp. Zero means begining ofa new sequence
      dim: -1	# .. and for each stream in the batch
    }
  }
  include: { phase: TEST }
  include: { phase: TRAIN}
}

layer{
  name: "target_label-reshape"
  type: "Reshape"
  bottom: "target_label"
  top: "target_label-reshape"
  reshape_param{
    shape{
      dim: 18
      dim: -1
    }
  }
  include: { phase: TEST }
  include: { phase: TRAIN }
}

#-------------------------------------------------------------

layer {
  name: "lstm1"
  type: "LSTM"
  bottom: "fc7-reshape"
  bottom: "cont_label-reshape"
  top: "lstm1"
  recurrent_param {
    num_output: 256
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}


layer {
  name: "drop-lstm1"
  type: "Dropout"
  bottom: "lstm1"
  top: "lstm1"
  dropout_param {
    dropout_ratio: 0.8
  }
}


#--------------------------------------------------------------
layer {
  name: "predict"
  type: "InnerProduct"
  bottom: "lstm1"
  top: "predict"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    # Set number of output to guarantee that class 101 is included
    num_output: 102
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    axis: 2
  }
}

layer {
  name: "softmax"
  type: "Softmax"
  bottom: "predict"
  top: "softmax"
  #include { phase: TEST }
  softmax_param {
    axis:  2
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "softmax"
  bottom: "target_label-reshape"
  top: "accuracy"
 # include { phase: TEST }
  accuracy_param {
    axis: 2
    ignore_label: 101 
    top_k: 1
  }
}


